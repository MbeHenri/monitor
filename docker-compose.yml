services:

  # postgresql
  db:
    image: postgres

    healthcheck:
      test: sh -c "pg_isready -d ${DB_NAME:-monitor} -U ${DB_USER:-monitor}"
      timeout: 60s
      retries: 5

    environment:
      POSTGRES_DB: ${DB_NAME:-monitor}
      POSTGRES_USER: ${DB_USER:-monitor}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-monitor}

    volumes:
      - db-data:/var/lib/postgresql/data

  # Django App
  backend:
    image: monitor-backend
    #command: sh -c "python manage.py makemigrations && python manage.py migrate --noinput && python manage.py createsuperuser --noinput && python manage.py runserver 0.0.0.0:8000"
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8051:8000

    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME:-monitor}
      DB_USER: ${DB_USER:-monitor}
      DB_PASSWORD: ${DB_PASSWORD:-monitor}
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: Admin123
      DJANGO_SUPERUSER_EMAIL: Admin123@gmail.com

    #healthcheck:
    #  test: [ "CMD", "curl", "-f", "http://localhost:8000/admin" ]
    #  timeout: 20s

    depends_on:
      db:
        condition: service_healthy

  # React App
  frontend:
    image: monitor-frontend
    ports:
      - 8050:80

    environment:
      MONITOR_API_HOST: 127.0.0.1
      MONITOR_API_PORT: 8051

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      timeout: 5s
    #depends_on:
    #  backend:
    #    condition: service_started


volumes:
  db-data: ~
